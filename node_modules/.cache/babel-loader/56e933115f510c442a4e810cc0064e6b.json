{"ast":null,"code":"var _jsxFileName = \"/Users/daniellealba/Desktop/PROJECTS/tree_hugger/tree_hugger/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport TreeContainer from './containers/TreesContainer';\nimport Splash from './containers/Splash';\nimport UserPage from './containers/UserPage';\n\nvar StatsD = require('node-dogstatsd').StatsD;\n\nvar dogstatsd = new StatsD();\nc.socket.on('error', function (exception) {\n  return console.log(\"error event in socket.send(): \" + exception);\n}); // putting comment- testing if i can access metrics\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      page: \"home\",\n      data: [],\n      filtered: [],\n      search: \"\",\n      filter: \"\" //componentDidMount\n\n    };\n\n    this.fetchData = () => {\n      fetch(\"https://data.cityofnewyork.us/resource/5rq2-4hqu.json\").then(res => res.json()).then(data => {\n        this.setState({\n          data: data,\n          filtered: data\n        });\n      });\n    };\n\n    this.changePage = newPage => {\n      if (this.state.page !== newPage) {\n        this.setState({\n          page: newPage\n        });\n      } // console.log(this.state.page)\n\n    };\n\n    this.renderPage = () => {\n      switch (this.state.page) {\n        case \"home\":\n          return React.createElement(Splash, {\n            changePage: this.changePage,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 53\n            },\n            __self: this\n          });\n\n        case \"allTrees\":\n          return React.createElement(TreeContainer, {\n            key: this.state.data.tree_id,\n            data: this.state.filtered,\n            selectFilter: this.selectFilter,\n            handleChange: this.handleChange,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 55\n            },\n            __self: this\n          });\n\n        case \"user\":\n          return React.createElement(UserPage, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 57\n            },\n            __self: this\n          });\n\n        default:\n          return React.createElement(\"h1\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 59\n            },\n            __self: this\n          }, \"hi default render\");\n      }\n    };\n\n    this.handleChange = event => {\n      event.preventDefault();\n      console.log(event.target.name, \"TARGET NAME\");\n      this.setState({\n        [event.target.name]: event.target.value\n      }); //filter for arrays set state to filtered\n\n      const copy = [...this.state.data];\n      const newArr = copy.filter(tree => {\n        if (tree.address.toLowerCase().includes(this.state.search) === true || tree.boroname.toLowerCase().includes(this.state.search) === true || tree.zipcode.includes(this.state.search) === true || tree.zip_city.toLowerCase().includes(this.state.search) === true) // &&\n          // (this.state.filter !== \"\" && tree.spc_common === this.state.filter  )\n          {\n            return tree;\n          }\n      });\n      this.setState({\n        filtered: newArr\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.fetchData();\n    console.log(dogstatsd.increment('page.views'));\n  } // fetch from external api\n\n\n  //handle select filters\n  //\n  //   selectFilter = (event) => {\n  //     event.preventDefault()\n  //     console.log(event.target.value, \"SELECT FILTER FUNCTION TARGET\")\n  //     this.setState({\n  //       filterTree: event.target.value\n  //     })\n  //     const copydos = [...this.state.filtered]\n  //     const newArrdos = copydos.filter(tree =>{\n  // console.log(tree)\n  //       if( tree.spc_common !== undefined  && tree.spc_common.includes(event.target.value) === true  ){\n  //\n  //       }\n  //     })\n  //     console.log(newArrdos, \"NEWARRDOS\")\n  //\n  //     this.setState({\n  //       filtered: newArrdos\n  //     })\n  //\n  //   }\n  //on screen\n  render() {\n    console.log(this.state, \"<- STATE OF MAIN PAGE\");\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, this.renderPage());\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/daniellealba/Desktop/PROJECTS/tree_hugger/tree_hugger/src/App.js"],"names":["React","Component","TreeContainer","Splash","UserPage","StatsD","require","dogstatsd","c","socket","on","exception","console","log","App","state","page","data","filtered","search","filter","fetchData","fetch","then","res","json","setState","changePage","newPage","renderPage","tree_id","selectFilter","handleChange","event","preventDefault","target","name","value","copy","newArr","tree","address","toLowerCase","includes","boroname","zipcode","zip_city","componentDidMount","increment","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport TreeContainer from './containers/TreesContainer'\nimport Splash from './containers/Splash'\nimport UserPage from './containers/UserPage'\n\nvar StatsD = require('node-dogstatsd').StatsD;\nvar dogstatsd = new StatsD();\nc.socket.on('error', function (exception) {\n   return console.log (\"error event in socket.send(): \" + exception);\n});\n// putting comment- testing if i can access metrics\nclass App extends Component {\n\n  state ={\n    page: \"home\",\n    data: [],\n    filtered: [],\n    search: \"\",\n    filter: \"\"\n  }\n\n  //componentDidMount\n  componentDidMount() {\n    this.fetchData()\n    console.log(dogstatsd.increment('page.views'))\n  }\n\n  // fetch from external api\n  fetchData = () => {\n    fetch(\"https://data.cityofnewyork.us/resource/5rq2-4hqu.json\")\n    .then(res => res.json())\n    .then(data =>{\n      this.setState({\n        data: data,\n        filtered: data\n      })\n    })\n  }\n\n  // handle change of page for render function\n  changePage = (newPage) => {\n    if (this.state.page !== newPage){\n      this.setState({page: newPage})\n    }\n    // console.log(this.state.page)\n  }\n\n  //render page function to tell what page to show\n  renderPage = () => {\n    switch(this.state.page){\n      case \"home\":\n      return <Splash changePage={this.changePage}/>\n      case \"allTrees\":\n      return <TreeContainer  key={this.state.data.tree_id} data={this.state.filtered} selectFilter={this.selectFilter} handleChange={this.handleChange}/>\n      case \"user\":\n      return <UserPage />\n      default:\n      return <h1>hi default render</h1>\n    }\n  }\n\n  //handle my onchange- get value from inputs and change state\n  handleChange = (event) => {\n    event.preventDefault()\n\n    console.log(event.target.name, \"TARGET NAME\")\n\n    this.setState({\n      [event.target.name]: event.target.value\n    })\n\n    //filter for arrays set state to filtered\n\n    const copy = [ ...this.state.data]\n    const newArr = copy.filter(tree=>{\n      if((tree.address.toLowerCase().includes(this.state.search)===true ||\n      tree.boroname.toLowerCase().includes(this.state.search)===true ||\n      tree.zipcode.includes(this.state.search)===true ||\n      tree.zip_city.toLowerCase().includes(this.state.search)===true )\n      // &&\n      // (this.state.filter !== \"\" && tree.spc_common === this.state.filter  )\n    ){\n        return tree\n      }\n    })\n\n    this.setState({\n      filtered: newArr\n    })\n\n  }\n\n  //handle select filters\n//\n//   selectFilter = (event) => {\n//     event.preventDefault()\n//     console.log(event.target.value, \"SELECT FILTER FUNCTION TARGET\")\n//     this.setState({\n//       filterTree: event.target.value\n//     })\n//     const copydos = [...this.state.filtered]\n//     const newArrdos = copydos.filter(tree =>{\n// console.log(tree)\n//       if( tree.spc_common !== undefined  && tree.spc_common.includes(event.target.value) === true  ){\n//\n//       }\n//     })\n//     console.log(newArrdos, \"NEWARRDOS\")\n//\n//     this.setState({\n//       filtered: newArrdos\n//     })\n//\n//   }\n\n  //on screen\n  render() {\n    console.log(this.state, \"<- STATE OF MAIN PAGE\")\n    return (\n      <div>\n        {this.renderPage()}\n\n\n      </div>\n    );\n  }\n\n\n\n\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}